DROP TABLE IF EXISTS Users CASCADE;
DROP TABLE IF EXISTS Events CASCADE;
DROP TABLE IF EXISTS Categories CASCADE;
DROP TABLE IF EXISTS Locations CASCADE;
DROP TABLE IF EXISTS Requests CASCADE;
DROP TABLE IF EXISTS Compilations CASCADE;
DROP TABLE IF EXISTS Compilation_events CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(250) NOT NULL,
    email         VARCHAR(254) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email),
    CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories (
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(50) NOT NULL,
    CONSTRAINT pk_cat PRIMARY KEY (id),
    CONSTRAINT UQ_CAT_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat           DECIMAL NOT NULL,
    lon           DECIMAL NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE events (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	annotation          VARCHAR(2000) NOT NULL,
	category_id         BIGINT NOT NULL,
	event_date          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	location_id         BIGINT NOT NULL,
	paid                BOOLEAN NOT NULL,
	participant_limit   INT,
	confirmed_requests  INT,
	published_date      TIMESTAMP WITHOUT TIME ZONE,
	created_date      TIMESTAMP WITHOUT TIME ZONE,
	request_moderation  BOOLEAN,
	state               VARCHAR(16),
	title               VARCHAR(120) NOT NULL,
    initiator_id        BIGINT NOT NULL,
    description         VARCHAR(7000),
    views               BIGINT,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_events_to_category FOREIGN KEY(category_id) REFERENCES categories(id) ON DELETE CASCADE,
    CONSTRAINT fk_events_to_locations FOREIGN KEY(location_id) REFERENCES locations(id) ON DELETE CASCADE,
    CONSTRAINT fk_events_to_users FOREIGN KEY(initiator_id ) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id            BIGINT NOT NULL,
    requester_id        BIGINT NOT NULL,
    status              VARCHAR(16),
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_request_to_event FOREIGN KEY(event_id ) REFERENCES events(id) ON DELETE CASCADE,
    CONSTRAINT fk_request_to_user FOREIGN KEY(requester_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT requests_un UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned              BOOLEAN,
    title               VARCHAR(50) NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id        BIGINT NOT NULL,
    event_id              BIGINT NOT NULL,
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_compilation FOREIGN KEY(compilation_id) REFERENCES compilations(id) ON DELETE CASCADE,
    CONSTRAINT fk_compilation_event FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
      id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      text          VARCHAR(1000),
      event_id      BIGINT NOT NULL,
      created       TIMESTAMP WITHOUT TIME ZONE,
      updated       TIMESTAMP WITHOUT TIME ZONE,
      CONSTRAINT pk_comment PRIMARY KEY (id),
      CONSTRAINT fk_comments_to_event FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
);


